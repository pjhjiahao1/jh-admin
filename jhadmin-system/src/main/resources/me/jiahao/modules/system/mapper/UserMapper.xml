<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="me.jiahao.modules.system.mapper.UserMapper">

    <select id="listForPage" resultType="me.jiahao.modules.system.entity.UserEntity">
        select
            a.id,
            a.username,
            a.org_id,
            a.enabled,
            a.phone,
            a.email,
            a.nick_name,
            a.gender,
            a.create_time,
            a.update_time,
            a.create_by,
            a.update_by,
			c.role_name,
			c.id as role_id
            from sys_user a
            left join sys_user_role b
            on a.id = b.user_id
            left join sys_role c
            on b.role_id = c.id
            <where>
                <if test="username != null">
                    and a.username like concat('%',#{username},'%')
                </if>
                <if test="nickName != null">
                    and a.nick_name like concat('%',#{nickName},'%')
                </if>
                <if test="roleName != null">
                    and a.role_name like concat('%',#{roleName},'%')
                </if>
            </where>
    </select>

    <select id="getUserByUserName" resultType="me.jiahao.modules.system.entity.UserEntity">
        select
            a.id,
            a.username,
            a.org_id,
            a.enabled,
            a.phone,
            a.email,
            a.nick_name,
            a.gender,
            a.create_time,
            a.update_time,
            a.create_by,
            a.update_by
            from sys_user a where a.username = #{username}

    </select>

    <insert id="save" parameterType="me.jiahao.modules.system.entity.UserEntity" useGeneratedKeys="true" keyProperty="id">
        insert into sys_user(password,username,org_id,enabled,phone,email,nick_name,gender,create_time,create_by)
        values (
            #{password,jdbcType=VARCHAR},
            #{username,jdbcType=VARCHAR},
            #{orgId,jdbcType=NUMERIC},
            #{enabled,jdbcType=NUMERIC},
            #{phone,jdbcType=VARCHAR},
            #{email,jdbcType=VARCHAR},
            #{nickName,jdbcType=VARCHAR},
            #{gender,jdbcType=VARCHAR},
            #{createTime,jdbcType=TIMESTAMP},
            #{createBy,jdbcType=VARCHAR}
        )

    </insert>

    <update id="update">
        update sys_user
        <set>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="orgId != null">
                org_id = #{orgId,jdbcType=NUMERIC},
            </if>
            <if test="enabled != null">
                enabled = #{enabled,jdbcType=NUMERIC},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="nickName != null">
                nick_name = #{nickName,jdbcType=VARCHAR},
            </if>
            <if test="gender != null">
                gender = #{gender,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <delete id="batchRemove">
        delete from sys_user where id in
        <foreach item="ids" collection="array" open="(" separator="," close=")">
            #{ids}
        </foreach>
    </delete>

</mapper>